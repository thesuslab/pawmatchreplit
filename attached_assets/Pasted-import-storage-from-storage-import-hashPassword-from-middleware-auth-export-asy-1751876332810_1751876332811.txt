import { storage } from '../storage';
import { hashPassword } from '../middleware/auth';

export async function seedDatabase() {
  console.log('Starting database seeding...');

  try {
    // Create users
    console.log('Creating users...');
    
    const adminUser = await storage.createUser({
      name: 'Admin User',
      email: 'admin@vetclinic.com',
      password: await hashPassword('password123'),
      role: 'admin',
      phone: '+1-555-0001',
      isActive: true,
    });

    const veterinarian1 = await storage.createUser({
      name: 'Dr. Sarah Johnson',
      email: 'sarah.johnson@vetclinic.com',
      password: await hashPassword('password123'),
      role: 'veterinarian',
      phone: '+1-555-0002',
      department: 'Small Animals',
      specialization: 'Internal Medicine',
      avatar: 'https://images.unsplash.com/photo-1559839734-2b71ea197ec2?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150',
      isActive: true,
    });

    const veterinarian2 = await storage.createUser({
      name: 'Dr. Michael Brown',
      email: 'michael.brown@vetclinic.com',
      password: await hashPassword('password123'),
      role: 'veterinarian',
      phone: '+1-555-0003',
      department: 'Surgery',
      specialization: 'Orthopedic Surgery',
      isActive: true,
    });

    const staff1 = await storage.createUser({
      name: 'Jessica Williams',
      email: 'jessica.williams@vetclinic.com',
      password: await hashPassword('password123'),
      role: 'staff',
      phone: '+1-555-0004',
      department: 'Reception',
      isActive: true,
    });

    const client1 = await storage.createUser({
      name: 'John Smith',
      email: 'john.smith@email.com',
      password: await hashPassword('password123'),
      role: 'client',
      phone: '+1-555-1001',
      avatar: 'https://images.pexels.com/photos/1043471/pexels-photo-1043471.jpeg?auto=compress&cs=tinysrgb&w=150',
      bio: 'Dog lover and first-time pet owner learning about proper pet care.',
      location: 'Brooklyn, NY',
      isActive: true,
    });

    const client2 = await storage.createUser({
      name: 'Maria Garcia',
      email: 'maria.garcia@email.com',
      password: await hashPassword('password123'),
      role: 'client',
      phone: '+1-555-1002',
      bio: 'Experienced pet owner with multiple cats and dogs.',
      location: 'Manhattan, NY',
      isActive: true,
    });

    const client3 = await storage.createUser({
      name: 'Robert Chen',
      email: 'robert.chen@email.com',
      password: await hashPassword('password123'),
      role: 'client',
      phone: '+1-555-1003',
      location: 'Queens, NY',
      isActive: true,
    });

    // Create pets
    console.log('Creating pets...');
    
    const pet1 = await storage.createPet({
      name: 'Buddy',
      species: 'Dog',
      breed: 'Golden Retriever',
      age: 3,
      weight: '65.5',
      color: 'Golden',
      gender: 'male',
      ownerId: client1.id,
      avatar: 'https://images.unsplash.com/photo-1551717743-49959800b1f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300',
      microchipId: 'MC001234567890',
      nextVaccination: new Date('2025-08-15T10:00:00Z'),
      lastCheckup: new Date('2025-05-15T14:30:00Z'),
      lastVisit: new Date('2025-06-01T09:15:00Z'),
      healthTips: ['Regular exercise', 'Dental care', 'Weight management'],
      dietRecommendations: 'High-quality adult dog food, 2 cups twice daily',
    });

    const pet2 = await storage.createPet({
      name: 'Luna',
      species: 'Cat',
      breed: 'Siamese',
      age: 2,
      weight: '8.2',
      color: 'Seal Point',
      gender: 'female',
      ownerId: client1.id,
      avatar: 'https://images.unsplash.com/photo-1472491235688-bdc81a63246e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300',
      microchipId: 'MC009876543210',
      nextVaccination: new Date('2025-09-10T11:00:00Z'),
      lastCheckup: new Date('2025-04-20T16:00:00Z'),
      healthTips: ['Indoor environment', 'Regular grooming', 'Dental hygiene'],
      dietRecommendations: 'Premium cat food, 1/2 cup twice daily',
    });

    const pet3 = await storage.createPet({
      name: 'Max',
      species: 'Dog',
      breed: 'German Shepherd',
      age: 5,
      weight: '75.0',
      color: 'Black and Tan',
      gender: 'male',
      ownerId: client2.id,
      avatar: 'https://images.unsplash.com/photo-1552053831-71594a27632d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300',
      microchipId: 'MC001122334455',
    });

    const pet4 = await storage.createPet({
      name: 'Bella',
      species: 'Cat',
      breed: 'Persian',
      age: 4,
      weight: '9.1',
      color: 'White',
      gender: 'female',
      ownerId: client2.id,
      avatar: 'https://images.unsplash.com/photo-1472491235688-bdc81a63246e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300',
      microchipId: 'MC005566778899',
    });

    const pet5 = await storage.createPet({
      name: 'Charlie',
      species: 'Dog',
      breed: 'Labrador',
      age: 1,
      weight: '45.3',
      color: 'Yellow',
      gender: 'male',
      ownerId: client2.id,
      avatar: 'https://images.unsplash.com/photo-1558788353-f76d92427f16?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300',
    });

    // Create appointments
    console.log('Creating appointments...');
    
    const appointment1 = await storage.createAppointment({
      petId: pet1.id,
      ownerId: client1.id,
      veterinarianId: veterinarian1.id,
      date: '2025-07-15',
      time: '10:00:00',
      duration: 30,
      type: 'Wellness Exam',
      status: 'confirmed',
      priority: 'normal',
      notes: 'Annual wellness checkup and vaccinations',
      symptoms: 'No symptoms reported',
    });

    const appointment2 = await storage.createAppointment({
      petId: pet2.id,
      ownerId: client1.id,
      veterinarianId: veterinarian1.id,
      date: '2025-07-08',
      time: '14:30:00',
      duration: 45,
      type: 'Follow-up',
      status: 'completed',
      priority: 'normal',
      notes: 'Check healing progress from spay surgery',
    });

    const appointment3 = await storage.createAppointment({
      petId: pet3.id,
      ownerId: client2.id,
      veterinarianId: veterinarian2.id,
      date: '2025-07-09',
      time: '09:00:00',
      duration: 60,
      type: 'Surgery Consultation',
      status: 'confirmed',
      priority: 'high',
      notes: 'Discuss hip dysplasia treatment options',
    });

    // Create medical records
    console.log('Creating medical records...');
    
    const medicalRecord1 = await storage.createMedicalRecord({
      petId: pet1.id,
      appointmentId: appointment2.id,
      veterinarianId: veterinarian1.id,
      date: new Date('2025-06-01T09:15:00Z'),
      type: 'wellness',
      title: 'Annual Wellness Examination',
      diagnosis: 'Healthy adult dog, mild dental tartar',
      treatment: 'Dental cleaning recommended, updated vaccinations',
      notes: 'Overall excellent health. Owner educated on dental care.',
      cost: '185.50',
      attachments: ['https://example.com/xray1.jpg'],
      prescriptions: [
        {
          medicationName: 'Heartgard Plus',
          dosage: '25mg',
          frequency: 'Monthly',
          duration: '12 months',
          instructions: 'Give with food, continue year-round',
        },
      ],
    });

    const medicalRecord2 = await storage.createMedicalRecord({
      petId: pet2.id,
      veterinarianId: veterinarian1.id,
      date: new Date('2025-05-20T11:30:00Z'),
      type: 'surgery',
      title: 'Spay Surgery',
      diagnosis: 'Routine spay procedure',
      treatment: 'Ovariohysterectomy completed successfully',
      notes: 'Surgery went well. Monitor for 7-10 days.',
      cost: '450.00',
      prescriptions: [
        {
          medicationName: 'Carprofen',
          dosage: '25mg',
          frequency: 'Twice daily',
          duration: '5 days',
          instructions: 'Give with food for pain management',
        },
      ],
    });

    // Create invoices
    console.log('Creating invoices...');
    
    const invoice1 = await storage.createInvoice({
      appointmentId: appointment2.id,
      clientId: client1.id,
      subtotal: '185.50',
      tax: '14.84',
      total: '200.34',
      status: 'paid',
      dueDate: '2025-07-01',
      paidDate: new Date('2025-06-02T10:30:00Z'),
      paymentMethod: 'Credit Card',
      items: [
        {
          description: 'Wellness Examination',
          quantity: 1,
          unitPrice: 85.00,
          total: 85.00,
        },
        {
          description: 'Vaccination - DHPP',
          quantity: 1,
          unitPrice: 45.00,
          total: 45.00,
        },
        {
          description: 'Heartgard Plus (12 months)',
          quantity: 1,
          unitPrice: 55.50,
          total: 55.50,
        },
      ],
    });

    const invoice2 = await storage.createInvoice({
      clientId: client2.id,
      subtotal: '750.00',
      tax: '60.00',
      total: '810.00',
      status: 'pending',
      dueDate: '2025-07-30',
      items: [
        {
          description: 'Surgery Consultation',
          quantity: 1,
          unitPrice: 150.00,
          total: 150.00,
        },
        {
          description: 'X-Ray - Hip',
          quantity: 2,
          unitPrice: 300.00,
          total: 600.00,
        },
      ],
    });

    const invoice3 = await storage.createInvoice({
      clientId: client3.id,
      subtotal: '120.00',
      tax: '9.60',
      total: '129.60',
      status: 'overdue',
      dueDate: '2025-06-15',
      items: [
        {
          description: 'Emergency Visit',
          quantity: 1,
          unitPrice: 120.00,
          total: 120.00,
        },
      ],
    });

    // Create inventory items
    console.log('Creating inventory items...');
    
    const inventoryItems = [
      {
        name: 'Amoxicillin 250mg Tablets',
        category: 'Antibiotics',
        currentStock: 5,
        minStock: 20,
        maxStock: 100,
        unitPrice: '0.85',
        supplier: 'VetPharm Supply Co.',
        expiryDate: '2026-03-15',
        status: 'active' as const,
      },
      {
        name: 'Heartgard Plus - Small Dogs',
        category: 'Preventatives',
        currentStock: 45,
        minStock: 25,
        maxStock: 100,
        unitPrice: '12.50',
        supplier: 'Merial Animal Health',
        expiryDate: '2026-09-30',
        status: 'active' as const,
      },
      {
        name: 'Surgical Gloves - Size M',
        category: 'Medical Supplies',
        currentStock: 150,
        minStock: 50,
        maxStock: 500,
        unitPrice: '0.45',
        supplier: 'MedVet Supplies',
        status: 'active' as const,
      },
      {
        name: 'Expired Medication Test',
        category: 'Antibiotics',
        currentStock: 10,
        minStock: 5,
        maxStock: 50,
        unitPrice: '1.25',
        supplier: 'Old Pharma Co.',
        expiryDate: '2024-01-01',
        status: 'active' as const,
      },
    ];

    for (const item of inventoryItems) {
      await storage.createInventoryItem(item);
    }

    // Create notifications
    console.log('Creating notifications...');
    
    const notifications = [
      {
        userId: client1.id,
        type: 'appointment_reminder',
        title: 'Appointment Reminder',
        message: 'Buddy has an appointment tomorrow at 10:00 AM with Dr. Sarah Johnson',
        read: false,
        actionUrl: `/appointments/${appointment1.id}`,
      },
      {
        userId: veterinarian1.id,
        type: 'new_appointment',
        title: 'New Appointment Scheduled',
        message: 'New appointment scheduled for Buddy (John Smith) on July 15th',
        read: false,
        actionUrl: `/appointments/${appointment1.id}`,
      },
      {
        userId: adminUser.id,
        type: 'inventory_alert',
        title: 'Low Inventory Alert',
        message: 'Amoxicillin 250mg Tablets is running low (5 units remaining)',
        read: false,
        actionUrl: '/inventory',
      },
    ];

    for (const notification of notifications) {
      await storage.createNotification(notification);
    }

    // Create training modules
    console.log('Creating training modules...');
    
    const trainingModules = [
      {
        title: 'Puppy Training Basics',
        category: 'Basic Training',
        duration: 120,
        difficulty: 'beginner' as const,
        image: 'https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg?auto=compress&cs=tinysrgb&w=400',
        description: 'Essential training techniques for new puppy owners covering house training, basic commands, and socialization.',
        prerequisites: [],
        tags: ['puppy', 'basic', 'house-training', 'commands'],
      },
      {
        title: 'Advanced Obedience Training',
        category: 'Advanced Training',
        duration: 180,
        difficulty: 'advanced' as const,
        image: 'https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg?auto=compress&cs=tinysrgb&w=400',
        description: 'Advanced training techniques for experienced dog owners including off-leash training and complex commands.',
        prerequisites: ['Puppy Training Basics'],
        tags: ['advanced', 'obedience', 'off-leash'],
      },
    ];

    for (const module of trainingModules) {
      await storage.createInventoryItem({
        name: module.title,
        category: module.category,
        currentStock: 1,
        minStock: 1,
        maxStock: 1,
        unitPrice: '0',
        status: 'active',
      });
    }

    // Create achievements
    console.log('Creating achievements...');
    
    const achievements = [
      {
        userId: client1.id,
        title: 'First Visit Complete',
        description: 'Completed your first veterinary visit',
        icon: '🏥',
        category: 'Milestones',
        unlocked: true,
        date: new Date('2025-06-01T09:15:00Z'),
        requirements: { visits_completed: 1 },
        points: 10,
      },
      {
        userId: client1.id,
        title: 'Vaccination Champion',
        description: 'Kept up with all scheduled vaccinations',
        icon: '💉',
        category: 'Health',
        unlocked: false,
        requirements: { vaccinations_up_to_date: true },
        points: 25,
      },
    ];

    for (const achievement of achievements) {
      await storage.createAchievement(achievement);
    }

    console.log('Database seeding completed successfully!');

    return {
      users: {
        admin: adminUser,
        veterinarian1,
        veterinarian2,
        staff1,
        client1,
        client2,
        client3,
      },
      pets: {
        pet1,
        pet2,
        pet3,
        pet4,
        pet5,
      },
      appointments: {
        appointment1,
        appointment2,
        appointment3,
      },
      medicalRecords: {
        medicalRecord1,
        medicalRecord2,
      },
      invoices: {
        invoice1,
        invoice2,
        invoice3,
      },
    };
  } catch (error) {
    console.error('Error seeding database:', error);
    throw error;
  }
}
